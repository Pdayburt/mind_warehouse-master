<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mind.mind_warehouse.mapper.ProductTypeMapper">
  <resultMap id="BaseResultMap" type="com.mind.mind_warehouse.entity.ProductType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mw_product_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mind.mind_warehouse.entity.ProductType" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into mw_product_type (code, name,
      parent_id, create_time, update_time, 
      is_delete)
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{parentId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.mind.mind_warehouse.entity.ProductType">
    update mw_product_type
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, code, name, parent_id, create_time, update_time, is_delete
    from mw_product_type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, code, name, parent_id, create_time, update_time, is_delete
    from mw_product_type
  </select>
<!--  List<ProductType> selectByIDAndName(@Param("id")Integer id,@Param("name")String name);-->
  <select id="selectByIDAndName" resultMap="BaseResultMap">
    select id,code,name,parent_id,create_time,update_time,is_delete
    from mw_product_type
    <where>
      <if test="name != null and name !=''">
       and name like '%${name}%'
      </if>
    <if test="code != null ">
      and code like '%${code}%'
    </if>
    </where>
  </select>
<!--  List<ProductTypeVo> selectAllProductTypeVo();-->
  <resultMap id="ProductTypeVoMap" type="ProductTypeVo">
    <id column="pid" property="id"></id>
    <result column="pname" property="name"></result>
    <collection property="children" ofType="ProductTypeVo">
      <id column="id" property="id"></id>
      <result column="name" property="name"></result>
    </collection>
  </resultMap>
  <select id="selectAllProductTypeVo" resultMap="ProductTypeVoMap">
    SELECT pt1.id pid,pt1.`name` pname,pt2.id ,pt2.`name`
    FROM mw_product_type pt1 LEFT JOIN  mw_product_type pt2
                                        ON pt1.id=pt2.parent_id
    where pt1.parent_id=-1
  </select>

<!--  List<ProductType> selectAllFatherProductType();-->
  <select id="selectAllFatherProductType" resultType="ProductType">
    select * from  mw_product_type where parent_id=-1
  </select>
<!--  List<ProductType> selectNotFatherProductType();-->
  <select id="selectNotFatherProductType" resultType="ProductType">
    select * from  mw_product_type where parent_id !=-1
  </select>

<!--  List<ProductType> selectByIds(int[] ids);-->
  <select id="selectByIds" resultMap="BaseResultMap">
    select id, code, name, parent_id, create_time, update_time, is_delete
    from mw_product_type
<where>
  id in
    <foreach collection="ids" open="(" separator="," close=")" item="id">
      #{id}
    </foreach>
</where>
  </select>
</mapper>