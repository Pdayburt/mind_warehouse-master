<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mind.mind_warehouse.mapper.CustomerMapper">
  <resultMap id="BaseResultMap" type="com.mind.mind_warehouse.entity.Customer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="fax" jdbcType="VARCHAR" property="fax" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mw_customer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mind.mind_warehouse.entity.Customer">
    insert into mw_customer (id, code, name, tel,
      fax, email, contact, 
      address, creat_time, update_time, 
      is_delete)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR},
      #{fax,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{creatTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDelete,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.mind.mind_warehouse.entity.Customer">
    update mw_customer
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, code, name, tel, fax, email, contact, address, creat_time, update_time, is_delete
    from mw_customer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, code, name, tel, fax, email, contact, address, creat_time, update_time, is_delete
    from mw_customer
  </select>

  <!--int deleteById(Integer id);-->
  <update id="deleteById" parameterType="Integer">
    update mw_customer
    set is_delete = 1
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--List<Customer> selectByLike(@Param("code") String code, @Param("name") String name,@Param("tel") String tel);-->
  <select id="selectByLike" resultMap="BaseResultMap">
    select id, code, name, tel, fax, email, contact, address, creat_time, update_time, is_delete
    from mw_customer
    <where>
      is_delete=0
      <if test="code != null and code.toString().trim() != ''">
        and code like concat('%',#{code},'%')
      </if>
      <if test="name != null and name.toString().trim() != ''">
        and name like concat('%',#{name},'%')
      </if>
      <if test="tel != null and tel.toString().trim() != ''">
        and tel like concat('%',#{tel},'%')
      </if>
    </where>
  </select>

  <!--List<Customer> selectByIds(Integer[] ids);-->
  <select id="selectByIds" resultMap="BaseResultMap">
    select id, code, name, tel, fax, email, contact, address, creat_time, update_time, is_delete
    from mw_customer where id in
    <foreach collection="ids" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </select>
</mapper>